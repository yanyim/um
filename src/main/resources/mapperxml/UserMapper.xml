<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tongtech.uesop.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.tongtech.uesop.dto.User">
    <!--@mbg.generated-->
    <!--@Table user-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="department" jdbcType="VARCHAR" property="department" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="avatar_url" jdbcType="VARCHAR" property="avatarUrl" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="last_password_reset_time" jdbcType="DATE" property="lastPasswordResetTime" />
    <result column="group" jdbcType="VARCHAR" property="group" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, user_name, department, `status`, avatar_url, user_id, email, phone, `password`, 
    create_time, last_password_reset_time, `group`
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.tongtech.uesop.dto.User" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into user (user_name, department, `status`, 
      avatar_url, user_id, email, 
      phone, `password`, create_time, 
      last_password_reset_time, `group`)
    values (#{userName,jdbcType=VARCHAR}, #{department,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, 
      #{avatarUrl,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{lastPasswordResetTime,jdbcType=DATE}, #{group,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.tongtech.uesop.dto.User" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userName != null">
        user_name,
      </if>
      <if test="department != null">
        department,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="avatarUrl != null">
        avatar_url,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="password != null">
        `password`,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="lastPasswordResetTime != null">
        last_password_reset_time,
      </if>
      <if test="group != null">
        `group`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="department != null">
        #{department,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="avatarUrl != null">
        #{avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastPasswordResetTime != null">
        #{lastPasswordResetTime,jdbcType=DATE},
      </if>
      <if test="group != null">
        #{group,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.tongtech.uesop.dto.User">
    <!--@mbg.generated-->
    update user
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="department != null">
        department = #{department,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=VARCHAR},
      </if>
      <if test="avatarUrl != null">
        avatar_url = #{avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastPasswordResetTime != null">
        last_password_reset_time = #{lastPasswordResetTime,jdbcType=DATE},
      </if>
      <if test="group != null">
        `group` = #{group,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tongtech.uesop.dto.User">
    <!--@mbg.generated-->
    update user
    set user_name = #{userName,jdbcType=VARCHAR},
      department = #{department,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=VARCHAR},
      avatar_url = #{avatarUrl,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      last_password_reset_time = #{lastPasswordResetTime,jdbcType=DATE},
      `group` = #{group,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectUsers" resultMap="BaseResultMap">
    select
      u.id, u.user_name,
      u.department, u.status,
      u.avatar_url, u.user_id,
      u.email, u.phone,
      u.create_time, u.last_password_reset_time,
      d.department_name as departmentName,
      u.group from user u left join department d on d.id = u.department
  </select>
    <select id="selectwithUserId" resultMap="BaseResultMap">
      select * from user where user_id = #{id,jdbcType=VARCHAR}
    </select>
  <select id="selectByAll" resultMap="BaseResultMap">
    select u.id, u.user_name,
    u.department, u.status,
    u.avatar_url, u.user_id,
    u.email, u.phone,
    u.create_time,
    u.last_password_reset_time,
    d.department_name as departmentName from user u
    left join department d on d.id = u.department where 1 = 1
    <if test="userName != null  and userName !='' ">
      and user_name like concat('%',#{userName,jdbcType=VARCHAR},'%')
    </if>
    <if test="userId != null  and userId !='' ">
      and user_id like concat('%',#{userId,jdbcType=VARCHAR},'%')
    </if>
    <if test="department != null  and department !='' ">
      and d.department_name like concat('%',#{department,jdbcType=VARCHAR},'%')
    </if>
    <if test="status != null  and status !='' and status !='ALL'">
      and status like concat('%',#{status,jdbcType=VARCHAR},'%')
    </if>
    <if test="phone != null  and phone !='' ">
      and phone like concat('%',#{phone,jdbcType=VARCHAR},'%')
    </if>
    <if test="email != null  and email !='' ">
      and email like concat('%',#{email,jdbcType=VARCHAR},'%')
    </if>
  </select>
</mapper>